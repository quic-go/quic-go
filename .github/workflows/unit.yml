on: [push, pull_request]


jobs:
  unit:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu", "windows", "macos" ]
        go: [ "1.21.x", "1.22.0-rc.1" ]
    runs-on: ${{ fromJSON(vars[format('UNIT_RUNNER_{0}', matrix.os)] || format('"{0}-latest"', matrix.os)) }}
    name: Unit tests (${{ matrix.os}}, Go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - run: go version
      - name: Run tests
        env:
          TIMESCALE_FACTOR: 10
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -cover -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Run tests as root
        if: ${{ matrix.os == 'ubuntu' }}
        env:
          TIMESCALE_FACTOR: 10
          FILE: sys_conn_helper_linux_test.go
        run: |
          test -f $FILE # make sure the file actually exists
          go run github.com/onsi/ginkgo/v2/ginkgo build -cover -tags root .
          sudo ./quic-go.test -ginkgo.v -ginkgo.trace -ginkgo.randomize-all -ginkgo.focus-file=$FILE -test.coverprofile coverage-root.txt
          rm quic-go.test
      - name: Run tests (32 bit)
        if: ${{ matrix.os != 'macos' }} # can't run 32 bit tests on OSX.
        env:
          TIMESCALE_FACTOR: 10
          GOARCH: 386
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -cover -coverprofile coverage.txt -output-dir . -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Run tests with race detector
        if: ${{ matrix.os == 'ubuntu' }} # speed things up. Windows and OSX VMs are slow
        env:
          TIMESCALE_FACTOR: 20
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r -v -race -randomize-all -randomize-suites -trace -skip-package integrationtests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.txt,coverage-root.txt
          env_vars: OS=${{ matrix.os }}, GO=${{ matrix.go }}
  freebsd:
    runs-on: macos-12
    name: Unit tests (freebsd, Go ${{ matrix.go }})
    env:
      TIMESCALE_FACTOR: 10
    strategy:
      fail-fast: false
      matrix:
        go: [ "1.20.x", "1.21.x" ]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: pick go version
        env:
          GO_VERSION: ${{ matrix.go }}
        run: |
          GO_VERSION="$(sed "s/x/*/g" <<< $GO_VERSION)"
          curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | jq -r 'map(.version) | map(select(test(env.GO_VERSION))) | .[0]' | xargs -I {} echo "GO_VERSION={}" | tee -a $GITHUB_ENV
      - uses: cross-platform-actions/action@6785ab118e0f221bdacd2e64a39253e7a1913103 # v0.19.1
        with:
          operating_system: 'freebsd'
          version: '13.2'
          environment_variables: TIMESCALE_FACTOR GO_VERSION
          shell: bash
          run: |
            echo "::group::Increase the Buffer Size to prevent 'setsockopt: no buffer space available'"
            sysctl kern.ipc.maxsockbuf
            sudo sysctl kern.ipc.maxsockbuf=16777216
            echo "::endgroup::"

            echo "::group::Install Go"
            curl -o go${GO_VERSION}.freebsd-amd64.tar.gz https://dl.google.com/go/go${GO_VERSION}.freebsd-amd64.tar.gz
            sudo tar -C /usr/local -xzf go${GO_VERSION}.freebsd-amd64.tar.gz
            export PATH="${PATH}:/usr/local/go/bin"
            go version
            echo "::endgroup::"

            failures=()

            echo "::group::Run tests"
            go run github.com/onsi/ginkgo/v2/ginkgo -r -v -cover -randomize-all -randomize-suites -trace -skip-package integrationtests
            echo "::endgroup::"

            if [ ${#failures[@]} -gt 0 ]; then
              echo "Failures:"
              for fail in "${failures[@]}"; do
                echo "❌ $fail"
              done
              exit 1
            fi
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.txt,coverage-root.txt
          env_vars: OS=freebsd, GO=${{ matrix.go }}
